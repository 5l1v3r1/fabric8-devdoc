swagger: '2.0'

info:
  version: "0.0.0"
  title: Build SPI
  description: |
    Build SPI specification.

securityDefinitions:
  TargetUrl:
    type: "apiKey"
    name: "targetUrl"
    in: header
  TargetToken:
    type: "apiKey"
    name: "targetToken"
    in: header

security:
- TargetUrl: []
- TargetToken: []

# TODO:
# - support rate limiting in reponses for public providers to avoid DDoS

paths:
  /namespace/{namespace}/buildconfigs:
    parameters:
    - $ref: "#/parameters/Namespace"
    post:
      summary: "Create a BuildConfig."
      description: "Create a BuildConfig."
      parameters:
      - $ref: "#/parameters/BuildConfig"
      responses:
        204:
          $ref: "#/responses/204"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
  /namespace/{namespace}/buildconfigs/{name}:
    parameters:
    - $ref: "#/parameters/Namespace"
    - $ref: "#/parameters/Name"
    get:
      summary: "Read a BuildConfig."
      description: "Read a BuildConfig."
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BuildConfig"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
    delete:
      summary: "Delete a BuildConfig."
      description: "Delete a BuildConfig."
      responses:
        204:
          $ref: "#/responses/204"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
    put:
      summary: "Replace the specified BuildConfig"
      description: "Replace the specified BuildConfig"
      parameters:
      - $ref: "#/parameters/BuildConfig"
      responses:
        204:
          $ref: "#/responses/204"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
  /namespace/{namespace}/buildconfigs/{name}/instantiate:
    parameters:
    - $ref: "#/parameters/Namespace"
    - $ref: "#/parameters/Name"
    post:
      summary: "Instantiate a BuildConfig object."
      description: "Instantiate a BuildConfig object. This will result in new Build being created and started."
      parameters:
      - $ref: "#/parameters/BuildRequest"
      responses:
        200:
          description: "OK"
          schema:
            type: object
            properties:
              BuildName:
                type: string
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
  /namespace/{namespace}/builds/{name}:
    parameters:
    - $ref: "#/parameters/Namespace"
    - $ref: "#/parameters/Name"
    get:
      summary: "Get build status."
      description: "Get build status."
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BuildStatus"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
    delete:
      summary: "Delete a Build."
      description: "Delete a Build."
      responses:
        204:
          $ref: "#/responses/204"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
  /namespace/{namespace}/builds/{name}/cancel:
    parameters:
    - $ref: "#/parameters/Namespace"
    - $ref: "#/parameters/Name"
    post: 
      summary: "Cancel a Build."
      description: "Cancel a Build."
      responses:
        204:
          $ref: "#/responses/204"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
  /namespace/{namespace}/builds/{name}/artifacts:
    parameters:
    - $ref: "#/parameters/Namespace"
    - $ref: "#/parameters/Name"
    get:
      summary: "List artifacts."
      description: "List artifacts."
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ArtifactList"
        401:
          $ref: "#/responses/401"
        405:
          $ref: "#/responses/405"
        500:
          $ref: "#/responses/500"
  /namespace/{namespace}/builds/{name}/artifacts/{artifact}:
    parameters:
    - $ref: "#/parameters/Namespace"
    - $ref: "#/parameters/Name"
    - $ref: "#/parameters/Artifact"
    get:
      summary: "Get artifact."
      description: "Get artifact."
      produces:
      - "*/*"
      responses:
        200:
          description: "OK"
        401:
          $ref: "#/responses/401"
        404:
          $ref: "#/responses/404"
        405:
          $ref: "#/responses/405"
        500:
          $ref: "#/responses/500"
  /namespace/{namespace}/builds/{name}/log:
    parameters:
    - $ref: "#/parameters/Namespace"
    - $ref: "#/parameters/Name"
    - $ref: "#/parameters/Follow"
    get:
      summary: "Get logs."
      description: "Get logs."
      produces:
      - "text/plain; charset=utf-8"
      responses:
        200:
          $ref: "#/responses/200"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
  /namespace/{namespace}/builds/{name}/stage/{stage}/log:
    parameters:
    - $ref: "#/parameters/Namespace"
    - $ref: "#/parameters/Name"
    - $ref: "#/parameters/Stage"
    - $ref: "#/parameters/Follow"
    get:
      summary: "Get logs for stage."
      description: "Get logs for stage."
      produces:
      - "text/plain; charset=utf-8"
      responses:
        200:
          $ref: "#/responses/200"
        401:
          $ref: "#/responses/401"
        405:
          $ref: "#/responses/405"
        500:
          $ref: "#/responses/500"

parameters:
  Namespace:
    name: namespace
    in: path
    description: "Namespace"
    required: true
    type: string
  Name:
    name: name
    in: path
    description: "Name of the object"
    required: true
    type: string
  BuildConfig:
    name: buildConfig
    in: body
    description: BuildConfig
    required: true
    schema:
      $ref: "#/definitions/BuildConfig"
  BuildRequest:
    name: buildRequest
    in: body
    description: BuildRequest
    required: true
    schema:
      $ref: "#/definitions/BuildRequest"
  Follow:
    name: follow
    in: query
    description: Follow
    required: true
    type: boolean
  Stage:
    name: stage
    in: path
    description: Stage
    required: true
    type: string
  Artifact:
    name: artifact
    in: path
    description: Artifact
    required: true
    type: string

definitions:
  GitConfig:
    type: object
    properties:
      uri:
        type: string
      ref:
        type: string
      httpProxy:
        type: string
      httpsProxy:
        type: string
    required:
    - uri
  BuildSource:
    type: object
    properties:
      type:
        type: string
        enum: ["Git"]
      git:
        $ref: "#/definitions/GitConfig"
    required:
    - type
  EnvVar:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
    required:
    - name
    - value
  Secret:
    type: object
    properties:
      name:
        type: string
      data:
        type: string
      type:
        type: string
        enum: [""]
    required:
    - name
    - data
  EnvVarList:
    type: array
    items:
      $ref: "#/definitions/EnvVar"
  SecretList:
    type: array
    items:
      $ref: "#/definitions/Secret"
  BuildConfig:
    type: object
    properties:
      name:
        type: string
      namespace:
        type: string
      source:
        $ref: "#/definitions/BuildSource"
      env:
        $ref: "#/definitions/EnvVarList"
      secrets:
        $ref: "#/definitions/SecretList"
    required:
    - name
    - source
  BuildRequest:
    type: object
    properties:
      env:
        $ref: "#/definitions/EnvVarList"
      secrets:
        $ref: "#/definitions/SecretList"
  Status:
    type: string
    enum:
    - "InProgress"
    - "Success"
    - "Failed"
  StageInfo:
    type: object
    properties:
      status:
        $ref: "#/definitions/Status"
      startTime:
        type: string
        format: date-time
      endTime:
        type: string
        format: date-time
      durationMs:
        type: integer
        format: int64
      pauseDurationMs:
        type: integer
        format: int64
    required:
    - status
    - startTime
    - endTime
    - durationMs
  StageStatus:
    type: object
    allOf:
    - $ref: "#/definitions/StageInfo"
    - type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
  StageStatusList:
    type: array
    items:
      $ref: "#/definitions/StageStatus"
  BuildStatus:
    type: object
    allOf:
    - $ref: "#/definitions/StageInfo"
    - type: object
      properties:
        stages:
          $ref: "#/definitions/StageStatusList"
      required:
      - stages
  Artifact:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      path:
        type: string
      size:
        type: integer
        format: int64
    required:
    - id
    - name
    - path
    - size
  ArtifactList:
    type: array
    items:
      $ref: "#/definitions/Artifact"

responses:
  200:
    description: "OK"
  204:
    description: "No Response"
  401:
    description: "Unauthorized"
  404:
    description: "Not Found"
  405:
    description: "Method Not Allowed"
  500:
    description: "Internal Server Error"
